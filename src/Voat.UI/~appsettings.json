{
    "voat": {
        "data": {
            "storeType": "PostgreSql", //Valid Values: PostgreSql or SqlServer
            "connections": [
                {
                    "name": "voatUsers",
                    //PostgreSql Connection String
                    "value": "Server={server};port=5432;Database={database};User ID={userid};Password={password};Persist Security Info=True;Keepalive=1;"
                    //SqlServer Connection String
                    //"value": "data source={server};initial catalog={database};User ID={userid};Password={password};Trusted_Connection=False;persist security info=True;Encrypt=True;TrustServerCertificate=True;Max Pool Size=2048;Pooling=true;"
                },
                {
                    "name": "ReadWrite",
                    "value": "Server={server};port=5432;Database={database};User ID={userid};Password={password};Persist Security Info=True;Keepalive=1;"
                },
                {
                    "name": "ReadOnly",
                    "value": "Server={server};port=5432;Database={database};User ID={userid};Password={password};Persist Security Info=True;Keepalive=1;"
                }
            ]
        },
        "logging": {
            "enabled": true,
            "configurationFile": "Logging.config",
            "handlers": [
                {
                    "enabled": true,
                    "name": "VoatDatabaseLogger",
                    "type": "Voat.Data.DatabaseLogger, Voat.Business",
                    "arguments": "[System.Int32](1);[System.TimeSpan](00:00:00);[Voat.Logging.LogType, Voat.Logging](All)"
                },
                {
                    //Core_Port: Log4Net not supported yet in .net core
                    "enabled": false,
                    "name": "Log4Net",
                    "type": "Voat.Logging.Log4NetLogger, Voat.Logging"
                },
                {
                    "enabled": false,
                    "name": "Null",
                    "type": "Voat.Logging.NullLogger, Voat.Logging"
                }
            ]
        },
        "cache": {
            "enabled": true,
            "handlers": [
                {
                    "enabled": true,
                    "name": "Redis",
                    "type": "Voat.Caching.RedisCacheHandler, Voat.Business",
                    "arguments": "[System.String](127.0.1:6379,defaultDatabase=7,allowAdmin=true,syncTimeout=4000);[System.Boolean](true)"
                },
                {
                    "enabled": false,
                    "name": "Memory",
                    "type": "Voat.Caching.MemoryCacheHandler, Voat.Business",
                    "arguments": "[System.Boolean](true)"
                },
                {
                    "enabled": false,
                    "name": "Null",
                    "type": "Voat.Caching.NullCacheHandler, Voat.Business"
                }
            ]
        },
        "rules": {
            "enabled": true,
            "discoverRules": true,
            "discoverAssemblies": "Voat.Business",
            "ruleSet": [
                {
                    "enabled": false,
                    "type": "Voat.Tests.Rules.TestDeniedRule, Voat.Tests"
                },
                {
                    "enabled": false,
                    "type": "Voat.Tests.Rules.TestPassRule, Voat.Tests"
                }
            ]
        },
         "fileManager": {
            "handlers": [
                {
                    "enabled": true,
                    "name": "Local",
                    "type": "Voat.IO.LocalNetworkFileManager, Voat.Business",
                    "arguments": ""
                },
                {
                    "enabled": false,
                    "name": "AzureBlob",
                    "type": "Voat.IO.AzureBlobFileManager, Voat.Business",
                    "arguments": "[System.String](<connection string>);[System.String]()"
                }
            ]
        },
        "emailSender": {
            "handlers": [
                {
                    "enabled": false,
                    "name": "Smtp",
                    "type": "Voat.IO.Email.SmtpEmailSender, Voat.Business",
                    "arguments": "[System.String](127.0.0.1);[System.Int32](0)"
                },
                {
                    "enabled": true,
                    "name": "SendGrid",
                    "type": "Voat.IO.Email.SendGridEmailSender, Voat.Business",
                    "arguments": "[System.String](<send grid api key here>)"
                }
            ]
        },
        "settings": {
            //Site Settings
            "siteName": "Voat",
            "siteSlogan": "Voat - have your say",
            "siteDescription": "a community platform where you can have your say. No censorship.",
            "siteKeywords": "voat, voat.co, vote, submit, comment",
            "footerText": "&amp;copy; 2018 Voat, Inc. All rights reserved. Voat and the Voat Mascot are trademarks of Voat, Inc.",
            "siteLogo": "/images/voat-logo.png",
            "cookieDomain": ".voat.co",
            "siteDomain": "", //Use blank to have the runtime automatically set
            "contentDeliveryDomain": "cdn.voat.co",
            "captchaEnabled": false,
            "recaptchaPublicKey": "<enter here>",
            "recaptchaPrivateKey": "<enter here>",
            "forceHTTPS": false,
            "reservedSubverseNames": [
                "all",
                "any",
                "default",
                "announcements",
                "voat",
                "askvoat",
                "front",
                "random"
            ],
            "reservedUserNames": [
                "voat",
                "system",
                "youcanclaimthissub",
                "voatbot",
                "atko",
                "puttitout",
                "derpyguy"
            ],

            //Rule Thresholds
            "minimumAccountAgeInDaysForSubverseCreation": 30,
            "minimumSubmissionPointsForSubverseCreation": 10,
            "minimumCommentPointsForSubverseCreation": 10,
            "minimumCommentPointsForCaptchaSubmission": 25,
            "minimumCommentPointsForCaptchaMessaging": 100,
            "maximumOwnedSubs": 10,
            "maximumOwnedSets": 20,
            "dailyPostingQuotaPerSub": 10,
            "dailyGlobalPostingQuota": 5,
            "dailyVotingQuota": 100,
            "dailyVotingQuotaScaledMinimum": 10,
            "hourlyGlobalPostingQuota": 3,
            "hourlyPostingQuotaPerSub": 3,
            "dailyCrossPostingQuota": 2,
            "dailyPostingQuotaForNegativeScore": 3,
            "dailyCommentPostingQuotaForNegativeScore": 10,
            "dailyCommentPostingQuota": 20,
            "hourlyCommentPostingQuota": 10,
            "maxAllowedAccountsFromSingleIP": 100,
            "maximumSetSubverseCount": 25,
            "minumumTitleLength": 5,
            "maximumTitleLength": 200,
            "allowUnicodeInTitles": true,

            //Runtime Settings
            "runtimeState": "Enabled",
            "signalrEnabled": false,
            "setsEnabled": true,
            "setCreationEnabled": true,
            "registrationEnabled": true,
            "useContentDeliveryNetwork": false,
            "adsEnabled": true,
            "apiKeyCreationEnabled": true,
            "redirectToSiteDomain": false,
            "origin": "UI",

            //Image Settings
            "thumbnailsEnabled": true,
            "thumbnailSize": {
                "height": 68,
                "width": 68
            },
            "avatarSize": {
                "height": 68,
                "width": 68
            },
            "destinationPathThumbs": "~/storage/thumbs",
            "destinationPathAvatars": "~/storage/avatars",

            //Voat API
            "apiEndPoint": "https://api.voat.co",
            "apiPublicKey": "",
            "apiPrivateKey": "",

            //Voat Settings
            "StorageConnectionString": "<enter here>",
            "emailServiceKey": "<enter here>"
        }
    }
}
