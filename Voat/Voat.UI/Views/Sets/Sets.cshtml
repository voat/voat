@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@using Voat.Models.ViewModels
@model PaginatedList<Voat.Models.Userset>

@{
    string sortingMode = ViewBag.SortingMode;
    string urlaction = "";

    switch (sortingMode)
    {
        case "new":
            ViewBag.Title = "Newest sets";
            urlaction = "NewestSets";
            break;
        case "recommended":
            ViewBag.Title = "Recommended sets";
            urlaction = "RecommendedSets";
            break;
        default:
            ViewBag.Title = "Most popular sets";
            urlaction = "Sets";
            break;
    }
}

<style type="text/css">
    body > .content .link .rank {
        width: 3.2ex;
    }
</style>

<div id="container">
    <div class="side">
        <div class="spacer">
            <div class="sidebox create">
                <a href="/sets/create" class="btn-whoaverse btn-block">
                    Create a new set
                </a>
            </div>
        </div>
        <div class="spacer">
            <div class="sidebox create">
                <a href="/sets/recommended" class="btn-whoaverse btn-block">
                    Recommended sets
                </a>
            </div>
        </div>
        <div class="spacer">
            <div class="sidebox create">
                <a href="/sets" class="btn-whoaverse btn-block">
                    Popular sets
                </a>
            </div>
        </div>
    </div>

    <div class="content" role="main">
        @switch (sortingMode)
        {
            case "new":
                <div class="alert-notice">
                    <p>Showing the most recently created sets.</p>
                </div>
                break;
            case "recommended":
            <div class="alert-notice">
                <p>These sets have been hand-picked by Voat staff to bring you the best of Voat.</p>
            </div>
                break;
            default:
            <div class="alert-notice">
                <p>Displaying user created sets sorted by popularity.</p>
            </div>
                break;
        }

        <div class="sitetable">

            @foreach (var set in Model)
            {
                var setViewModel = new SetDetailsViewModel()
                {
                    Name = set.Name,
                    Id = set.Set_id,
                    Subscribers = set.Subscribers,
                    Description = set.Description,
                    CreatedBy = set.Created_by,
                    CreationDate = set.Created_on,
                    SubversesList = set.Usersetdefinitions.ToList()
                };

                @Html.Partial("~/Views/Sets/_SetDetails.cshtml", setViewModel)
            }
        </div>

        <div class="pagination-container">
            <ul>
                @if (Model.HasPreviousPage)
                {
                    <li class="btn-whoaverse-paging">
                        @Html.RouteLink("‹ prev", urlaction, new { page = (Model.PageIndex - 1) }, new { rel = "prev" })
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="btn-whoaverse-paging">
                        @Html.RouteLink("next ›", urlaction, new { page = (Model.PageIndex + 1) }, new { rel = "next" })
                    </li>
                }
            </ul>
        </div>

    </div>
</div>
