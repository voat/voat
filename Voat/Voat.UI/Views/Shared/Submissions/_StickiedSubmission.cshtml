@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@model Voat.Data.Models.Message

@{
    string commentsUrl = "/v/" + Model.Subverse + "/comments/" + Model.Id;

    var commentCount = CommentCounter.CommentCount(Model.Id);

    DateTime submissionDate = Model.Date;
    string postAge = Submissions.CalcSubmissionAge(submissionDate);

    bool? subverseAnonymized = Convert.ToBoolean(ViewData["SubverseAnonymized"]);

    //type 2 = urls
    if (Model.Type == 2)
    {
        string submissionDomain = UrlUtility.GetDomainFromUri(Model.MessageContent);

        if (Model.Thumbnail != null)
        {
            <a class="thumbnail may-blank" href="@Model.MessageContent">
                @if (Settings.UseContentDeliveryNetwork)
                {
                    <img src="https://cdn.voat.co/thumbs/@Model.Thumbnail" alt="@Model.Linkdescription" />
                }
                else
                {
                    <img src="~/Thumbs/@Model.Thumbnail" alt="@Model.Linkdescription" />
                }
            </a>
        }

        <div class="entry unvoted">
            <p class="title">
                <span class="promoted">sticky</span>
                <a class="title may-blank " href="@Model.MessageContent" tabindex="1" title="@Model.Linkdescription">@Model.Linkdescription</a>
                <span class="domain">(<a href="#">@submissionDomain</a>)</span>
            </p>
            @if (Model.Anonymized || subverseAnonymized == true)
            {
                <p class="tagline">
                    submitted <time title="@Model.Date" datetime="@Model.Date">@postAge</time> ago by <a href="#" class="author may-blank">@Model.Id</a>
                    <span class="userattrs"></span> to <a href="/v/@Model.Subverse" class="subverse hover may-blank">@Model.Subverse</a>
                </p>
            }
            else
            {
                <p class="tagline">
                    submitted <time title="@Model.Date" datetime="@Model.Date">@postAge</time> ago by <a href="/user/@Model.Name" class="author may-blank userinfo" data-username="@Model.Name">@Model.Name</a>
                    <span class="userattrs"></span> to <a href="/v/@Model.Subverse" class="subverse hover may-blank">@Model.Subverse</a>
                </p>
            }
            <ul class="flat-list buttons">
                <li class="first">
                    @if (commentCount > 0)
                    {
                        <a href="@commentsUrl" class="comments may-blank">@commentCount comments</a>
                    }
                    else
                    {
                        <a href="@commentsUrl" class="comments may-blank">discuss</a>
                    }
                </li>
                <li class="share">
                    <span class="share-button toggle" style="">
                        <a class="option active login-required" href="#" tabindex="100">share</a>
                        <a class="option " href="#">cancel</a>
                    </span>
                </li>
            </ul>
        </div>
    }
    else
    {
        //type 1 = message
        <div class="entry unvoted">
            <p class="title">
                <span class="promoted">sticky</span>
                <a class="title may-blank" href="@commentsUrl" tabindex="1">@Model.Title</a>
                <span class="domain">(<a href="/v/@Model.Subverse">self.@Model.Subverse</a>)</span>
            </p>
            <div class="expando-button collapsed selftext" onclick="loadSelfText(this, @Model.Id)"></div>
            
            @if (Model.Anonymized || subverseAnonymized == true)
            {
                <p class="tagline">
                    submitted <time title="@Model.Date" datetime="@Model.Date">@postAge</time> ago by <a href="#" class="author may-blank">@Model.Id</a>
                    <span class="userattrs"></span> to <a href="/v/@Model.Subverse" class="subverse hover may-blank">@Model.Subverse</a>
                    <span class="commentvotesratio">(<span class="post_upvotes">+@Model.Likes</span>|<span class="post_downvotes">-@Model.Dislikes</span>)</span>
                </p>
            }
            else
            {
                <p class="tagline">
                    submitted <time title="@Model.Date" datetime="@Model.Date">@postAge</time> ago by <a href="/user/@Model.Name" class="author may-blank userinfo" data-username="@Model.Name">@Model.Name</a>
                    <span class="userattrs"></span> to <a href="/v/@Model.Subverse" class="subverse hover may-blank">@Model.Subverse</a>
                    <span class="commentvotesratio">(<span class="post_upvotes">+@Model.Likes</span>|<span class="post_downvotes">-@Model.Dislikes</span>)</span>
                </p>
            }

            <ul class="flat-list buttons">
                <li class="first">
                    @if (commentCount > 0)
                    {
                        <a href="@commentsUrl" class="comments may-blank">@commentCount comments</a>
                    }
                    else
                    {
                        <a href="@commentsUrl" class="comments may-blank">discuss</a>
                    }
                </li>
                @if (User.Identity.IsAuthenticated)
                {
                    if (!Model.IsDeleted)
                    {
                        <li>
                            @Html.Partial("~/Views/Shared/Submissions/SubmissionFlatListButtons/_SFLButtonSave.cshtml", Model, new ViewDataDictionary { { "submissionId", Model.Id } })
                        </li>
                    }
                }
            </ul>
            <div class="expando" style="display: none">
                <form style="" novalidate="novalidate" class="usertext" action="#">
                    <div class="usertext-body may-blank-within">
                        <div class="md">
                            Please wait...
                        </div>
                    </div>
                </form>
            </div>
        </div>    
    }

}
