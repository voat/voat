@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@model PaginatedList<Voat.Data.Models.Comment>

@{
    ViewBag.Title = "Inbox - comment replies";
}

<style>
    .comment {
        margin: 0px 0px 0px;
    }
</style>

@Html.AntiForgeryToken()

<div id="container">
    <h1>Comment & User Mention Notifications</h1>
    <a href="/messaging/inbox/" class="btn-whoaverse-paging">Private Messages [@ViewBag.UnreadPrivateMessages / @ViewBag.InboxCount]</a>
    <a href="/messaging/postreplies/" class="btn-whoaverse-paging">Post Replies [@ViewBag.UnreadPostReplies / @ViewBag.PostRepliesCount]</a>
    <div id="about-main" role="main">
        <div class="md single-notification">
            @if (Model.Count > 0)
            {
                <p>Displaying newest @Model.Count comment reply notifications. You have a total of @ViewBag.CommentRepliesCount comment reply / user mention notification(s).</p>
                <hr />
                foreach (var comment in Model)
                {
                    string commentAuthorUrl;
                    var commentAuthorName = "";
                    if (comment.IsDeleted)
                    {
                        commentAuthorUrl = "#";
                        commentAuthorName = "deleted";
                    }
                    else
                    {
                        if (comment.IsAnonymized)
                        {
                            commentAuthorUrl = "#";
                            commentAuthorName = comment.ID.ToString();
                        }
                        else
                        {
                            commentAuthorUrl = "/u/" + @comment.UserName;
                            commentAuthorName = comment.UserName;
                        }
                    }
                    
                    <div id="commentContainer-@comment.ID">
                        <div class="panel panel-default">
                            <div class="panel panel-heading">
                                From: <a href="@commentAuthorUrl">@commentAuthorName</a> | Sent: @comment.CreationDate
                            </div>
                            <div class="panel panel-heading-messagetitle">
                                @if (comment.Submission.Type == 1)
                                {
                                    <a href="/v/@comment.Submission.Subverse/comments/@comment.SubmissionID"><b>@comment.Submission.Title</b></a>
                                }
                                else
                                {
                                    <a href="/v/@comment.Submission.Subverse/comments/@comment.SubmissionID"><b>@comment.Submission.LinkDescription</b></a>
                                }
                            </div>
                            <div class="panel-message-body">
                                
                                @*@Html.Partial("~/Views/AjaxViews/_SingleSubmissionComment.cshtml", comment, new ViewDataDictionary { { "CommentId", comment.Id }, { "CCP", Karma.CommentKarma(User.Identity.Name) }, { "parentIsHidden", false }, { "SortingMode", "new" }, { "ShowContextLink", true } })*@
                                @Html.Partial("~/Views/Shared/Submissions/_SubmissionComment.cshtml", new Voat.Models.CommentBucketViewModel(comment), new ViewDataDictionary { { "CommentId", comment.ID }, { "CCP", Karma.CommentKarma(User.Identity.Name) }, { "parentIsHidden", false }, { "SortingMode", "new" }, { "ShowContextLink", true } })
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>
                    You have no comment reply notifications :( <br /><br />
                    If you started writing more comments, you would be getting more comment reply notifications. How's that for advice from artificial intelligence?
                </p>
            }
        </div>
    </div>
    <div class="pagination-container">
        <ul>
            @if (Model.HasPreviousPage)
            {
                <li class="btn-whoaverse-paging">
                    @Html.RouteLink("‹ prev", "CommentReplies", new { page = (Model.PageIndex - 1) }, new { rel = "prev" })
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="btn-whoaverse-paging">
                    @Html.RouteLink("next ›", "CommentReplies", new { page = (Model.PageIndex + 1) }, new { rel = "next" })
                </li>
            }
        </ul>
    </div>
</div>
