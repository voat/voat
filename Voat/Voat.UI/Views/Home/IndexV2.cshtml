@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@model Voat.Models.ViewModels.SetFrontpageViewModel
@using System.Configuration

@{
    ViewBag.Title = MvcApplication.SiteSlogan;

    int commentContributionPoints = 0;
    int counter = 1;

    if (User.Identity.IsAuthenticated)
    {
        commentContributionPoints = Karma.CommentKarma(User.Identity.Name);
    }
}

<style type="text/css">
    body > .content .link .rank {
        width: 3.2ex;
    }
</style>

<div id="container">

    @{
        @Html.Partial("~/Views/Shared/Sidebars/_SidebarFrontpage.cshtml")
    }

    <div class="content" role="main">
        <div class="sitetable">
            @Html.Partial("~/Views/Welcome/_FirstTimeVisitorWelcome.cshtml")

            @if (Model.UserSets != null)
            {
                // show content from subscribed sets
                foreach (var set in Model.UserSets.Where(s => s.Userset.Usersetdefinitions.Any()).OrderBy(s => s.Order))
                {
                    var currentSet = set.Userset.Name;

                    <div class="set-container" id="set-@set.Set_id-container">
                        @Html.Partial("~/Views/Sets/_SetTitle.cshtml", new ViewDataDictionary { { "setTitle", currentSet }, { "setId", set.Set_id } })

                        @foreach (var submission in Model.SubmissionsList.Where(x => x.ParentSet == currentSet))
                        {
                            // get only submissions which belong to currently selected set
                            // type 2 = link
                            // type 1 = message
                            string submissionClass = "";
                            if (submission.Type == 1)
                            {
                                submissionClass = "self";
                            }
                            else
                            {
                                submissionClass = "";
                            }

                            string classEvenOrOdd = "";
                            if (counter % 2 == 0)
                            {
                                //is even
                                classEvenOrOdd = "even";
                            }
                            else
                            {
                                //is odd
                                classEvenOrOdd = "odd";
                            }

                            <div class="submission id-@submission.Id @classEvenOrOdd link @submissionClass" data-fullname="@submission.Id" data-ups="@submission.Votes" data-downs="">
                                <p class="parent"></p>

                                @Html.Partial("_votingIconsSubmission", submission, new ViewDataDictionary { { "CCP", commentContributionPoints } })
                                @Html.Partial("~/Views/Shared/Submissions/_Submission.cshtml", submission)

                                <div class="child"></div>
                                <div class="clearleft">@*IE6fix*@</div>
                            </div>
                            counter++;
                        }
                    </div>
                    <a href="javascript:void(0)" onclick='loadMoreSetItems(this,@set.Set_id)' class=" btn-whoaverse btn-block">
                        load more &#9660;
                    </a>
                }
            }
            else
            {
                // show content from subscribed sets
                foreach (var set in Model.DefaultSets.OrderBy(s => s.Name))
                {
                    var currentSet = set.Name;

                    <div class="set-container" id="set-@set.Set_id-container">
                        @Html.Partial("~/Views/Sets/_SetTitle.cshtml", new ViewDataDictionary { { "setTitle", currentSet }, { "setId", set.Set_id } })

                        @foreach (var submission in Model.SubmissionsList.Where(x => x.ParentSet == currentSet))
                        {
                            // get only submissions which belong to currently selected set
                            // type 2 = link
                            // type 1 = message
                            string submissionClass = "";
                            if (submission.Type == 1)
                            {
                                submissionClass = "self";
                            }
                            else
                            {
                                submissionClass = "";
                            }

                            string classEvenOrOdd = "";
                            if (counter % 2 == 0)
                            {
                                //is even
                                classEvenOrOdd = "even";
                            }
                            else
                            {
                                //is odd
                                classEvenOrOdd = "odd";
                            }

                            <div class="submission id-@submission.Id @classEvenOrOdd link @submissionClass" data-fullname="@submission.Id" data-ups="@submission.Votes" data-downs="">
                                <p class="parent"></p>

                                @Html.Partial("_votingIconsSubmission", submission, new ViewDataDictionary { { "CCP", commentContributionPoints } })
                                @Html.Partial("~/Views/Shared/Submissions/_Submission.cshtml", submission)

                                <div class="child"></div>
                                <div class="clearleft">@*IE6fix*@</div>
                            </div>
                            counter++;
                        }
                    </div>
                    <a href="javascript:void(0)" onclick='loadMoreSetItems(this, @set.Set_id)' class=" btn-whoaverse btn-block">
                        load more &#9660;
                    </a>
                }
            }

        </div>
    </div>
</div>
