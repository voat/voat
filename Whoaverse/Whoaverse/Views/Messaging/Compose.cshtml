@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@using System.Configuration
@using Voat.Utils
@model Voat.Models.ViewModels.PrivateMessageComposeViewModel

@{
    ViewBag.Title = "Private message: compose";
    string recipient = Request.Params["recipient"];
}

<div id="container">
    <div>
        <div class="row nomargin">
            <div class="well">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <br />
                    <div class="alert alert-info">You are composing a new private message.</div>

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true)

                        <div class="form-group">
                            @Html.Label("Recipient", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.Recipient, new { @class = "form-control", @Value = recipient })
                                @Html.ValidationMessageFor(model => model.Recipient)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Subject", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.Subject, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Subject)
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.Label("Message body", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.MarkdownEditorFor(m => m.Body, new { rows="8", cols="1", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Body)
                            </div>
                        </div>

                        @if (Karma.CommentKarma(User.Identity.Name) < 100)
                        {
                            <div class="panel panel-default">
                                <div class="panel-heading">Are you a human?</div>
                                <div class="panel-body">
                                    <p>Please solve the reCAPTCHA challenge below:</p>
                                    @{Html.RenderPartial("_Captcha");}
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="pull-left">
                                    <input type="submit" value="Send" class="btn-whoaverse" />
									<input type="button" id="previewButton" value="Preview" class="btn-whoaverse" onclick="showMessagePreview(this,$(this.parentElement.parentElement.parentElement).find('#Body'),$(this.parentElement.parentElement.parentElement).find('#submission-preview-area'))">
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Send" class="btn-whoaverse" />
									<input type="button" id="previewButton" value="Preview" class="btn-whoaverse" onclick="showMessagePreview(this,$(this.parentElement.parentElement.parentElement).find('#Body'),$(this.parentElement.parentElement.parentElement).find('#submission-preview-area'))">
                                </div>
                            </div>
                        }
						<div class="form-group">
							<div class="panel panel-default" id="submission-preview-area" style="display: none">
								<div class="panel-heading">
									<h4 class="panel-title">Preview</h4>
								</div>
								<div class="panel-body">
									<div class="usertext-body may-blank-within">
										<div class="md" id="submission-preview-area-container">
											Loading preview...
										</div>
									</div>
								</div>
							</div>
						</div>

                    </div>
                }


            </div>
        </div>

    </div>
</div>