@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@model PaginatedList<Voat.Models.Message>

@using System.Globalization
@using Voat.Models.ViewModels

@{
    string searchTerm = "";
    string selectedSubverse = "";

    if (!String.IsNullOrEmpty(Request.QueryString["q"]))
    {
        searchTerm = Request.QueryString["q"].ToString(CultureInfo.InvariantCulture);
    }

    if (!String.IsNullOrEmpty(Request.QueryString["sub"]))
    {
        selectedSubverse = Request.QueryString["sub"].ToString(CultureInfo.InvariantCulture);
    }

    bool limitSearchToSubverse = Request.QueryString["l"].AsBool();

    int commentContributionPoints = 0;
    if (User.Identity.IsAuthenticated)
    {
        commentContributionPoints = Karma.CommentKarma(User.Identity.Name);
    }
}

<style type="text/css">
    body > .content .link .rank {
        width: 3.2ex;
    }
</style>


<div id="container">
    <div class="side">
        @{
            @Html.Partial("_SearchMinimal", new SearchViewModel())
        }
    </div>

    <div class="content" role="main">

        @Html.ActionLink("< Go back to frontpage", "Index", "Home")

        <div class="alert alert-info">
            <p>Here are your search results for the term "<b>@searchTerm</b>", we found <b>@Model.TotalCount</b> matches:</p>
            <p><i>* Search is currently limited to 25 records due to performance reasons.</i></p>
        </div>

        <div class="sitetable linklisting">

            @{
                int currentPageNumber = Model.PageIndex;
                int counterCont = (currentPageNumber) * 25;

                int counter = counterCont + 1;
                string submissionClass = "";
            }

            @foreach (var submission in Model)
            {
                //type 2 = link
                //type 1 = message
                if (submission.Type == 1)
                {
                    submissionClass = "self";
                }
                else
                {
                    submissionClass = "";
                }

                <div class="submission id-@submission.Id even link @submissionClass" data-fullname="@submission.Id" data-ups="@submission.Votes" data-downs="">
                    <p class="parent"></p>

                    @Html.Partial("_votingIconsSubmission", submission, new ViewDataDictionary { { "CCP", commentContributionPoints } })
                    @Html.Partial("~/Views/Shared/Submissions/_Submission.cshtml", submission)

                    <div class="child"></div>
                    <div class="clearleft">@*IE6fix*@</div>
                </div>
                counter++;
            }

        </div>

        <div class="pagination-container">
            <ul>
                @if (Model.HasPreviousPage)
                {
                    <li class="btn-whoaverse-paging">
                        @Html.RouteLink("‹ prev", "Search", new { page = (Model.PageIndex - 1), q = searchTerm, sub = selectedSubverse, l = limitSearchToSubverse }, new { rel = "prev" })
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="btn-whoaverse-paging">
                        @Html.RouteLink("next ›", "Search", new { page = (Model.PageIndex + 1), q = searchTerm, sub = selectedSubverse, l = limitSearchToSubverse }, new { rel = "next" })
                    </li>
                }
            </ul>
        </div>
    </div>
</div>
